name: Promote Charm

on:
  workflow_dispatch:
    inputs:
      origin-channel:
        description: 'Origin Channel'
        type: string
        required: true
      destination-channel:
        description: 'Destination Channel'
        type: string
        required: true
      charmcraft-channel:
        description: 'Snap channel to use when installing charmcraft'
        required: false
        type: string
        default: 'latest/edge'

jobs:
  promote-charm:
      name: Promote charm
      uses: canonical/identity-team/.github/workflows/charm-promotion.yaml@6980fa34b31ca8631e6cb2d57980e7e035697a31 # v1.8.5
      with:
        origin-channel: ${{ github.event.inputs.origin-channel }}
        destination-channel: ${{ github.event.inputs.destination-channel }}
        charmcraft-channel: ${{ github.event.inputs.charmcraft-channel }}
      secrets:
        CHARMCRAFT_CREDENTIALS: ${{ secrets.CHARMCRAFT_CREDENTIALS }}

  revision:
    concurrency:
      group: ${{ github.event.inputs.destination-channel }}
      cancel-in-progress: true
    needs: promote-charm
    outputs:
      revision: ${{ steps.set-revision.outputs.revision }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Set charm name
        id: set-charm-name
        run: echo charm_name=$(cat charmcraft.yaml | yq '.name') >> $GITHUB_OUTPUT
      - name: Set revision
        id: set-revision
        run: |
          sudo snap install charmcraft --classic --channel latest/stable
          revision=$(charmcraft status ${{ env.CHARM_NAME }} --format json | jq '.[] | select(.track == "${{ env.TRACK }}") | .mappings[0].releases[] | select(.channel == "${{ github.event.inputs.destination-channel }}") | .revision')
          echo "setting output of revision=$revision"
          echo "revision=$revision" >> $GITHUB_OUTPUT
        env:
          CHARMCRAFT_AUTH: ${{ secrets.CHARMCRAFT_CREDENTIALS }}
          CHARM_NAME: ${{ steps.set-charm-name.outputs.charm_name }}
          # only cater for latest track for now
          TRACK: latest

  dev-deploy:
    concurrency:
      group: ${{ github.event.inputs.destination-channel }}
      cancel-in-progress: true
    needs:
      - promote-charm
      - revision
    if: ${{ (github.event.inputs.destination-channel == 'latest/edge') }}
    uses: ./.github/workflows/_deploy.yaml
    secrets:
      CLIENT_ID: ${{ secrets.JIMM_DEV_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.JIMM_DEV_CLIENT_SECRET }}
      JIMM_URL: ${{ secrets.JIMM_URL }}
    with:
      model: dev-iam
      revision: ${{ needs.revision.outputs.revision }}
      channel: ${{ github.event.inputs.destination-channel }}

  stg-deploy:
    concurrency:
      group: ${{ github.event.inputs.destination-channel }}
      cancel-in-progress: true
    needs:
      - promote-charm
      - revision
    if: ${{ (github.event.inputs.destination-channel == 'latest/stable') }}
    uses: ./.github/workflows/_deploy.yaml
    secrets:
      CLIENT_ID: ${{ secrets.JIMM_STG_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.JIMM_STG_CLIENT_SECRET }}
      JIMM_URL: ${{ secrets.JIMM_URL }}
    with:
      model: stg-iam
      revision: ${{ needs.revision.outputs.revision }}
      channel: ${{ github.event.inputs.destination-channel }}
